/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalContact;

import System.CareCenterSystem;
import System.GODoc.GODoc;
import System.Hospital.Hospital;
import System.HospitalContact.HospitalContact;
import System.HospitalContact.HospitalContactDirectory;
import System.Hospital_GO.Hospital_GO;
import System.Hospital_PED.Hospital_PED;
import System.InRequest.InRequestList;
import System.PEDoc.PEDoc;
import System.UserAccount.UserAccount;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;

/**
 *
 * @author raunak
 */
public class ManageDoctorJPanel extends JPanel {

    private JPanel userProcessContainer;
    private CareCenterSystem system;
    private UserAccount userAccount;
    private HospitalContact hospitalcontact;
    private Hospital hospital;
    private InRequestList inrequestList;
    private Hospital_GO GOdocList;
    private Hospital_PED PEDdocList;
    //private Pregnant pregnant;
    
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public ManageDoctorJPanel(JPanel userProcessContainer, UserAccount userAccount, CareCenterSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount=userAccount;
        HospitalContactDirectory hospitalContactDirectory = system.getHospitalContactDirectory();
        this.hospitalcontact = hospitalContactDirectory.searchContact(userAccount.getUsername());
        this.system = system;
        this.hospital=system.getHospitalDirectory().searchHospital(hospitalcontact.getHospital().getName());
        this.PEDdocList=hospital.getHospital_PED();
        this.GOdocList=hospital.getHospital_GO();
        this.inrequestList=hospital.getInrequestDirectory();
        
        
        populateTable();
    }
    
    public void populateTable(){

        DefaultTableModel model2 = (DefaultTableModel) GOJTable.getModel();
        model2.setRowCount(0);
        if (GOdocList==null){
            Object[] row = new Object[5];
            model2.addRow(row);
        }
        else {
            for (GODoc go : GOdocList.getGODocList()) {
                Object[] row = new Object[5];
                row[0] = go;
                row[1] = go.getSex();
                row[2] = go.getUsrname();
                row[3] = go.getPassword();
                row[4] = go.getStatu();
                model2.addRow(row);
            }
        }
        
        DefaultTableModel model3 = (DefaultTableModel) PEDJTable.getModel();
        model3.setRowCount(0);
        if (PEDdocList==null){
            Object[] row = new Object[5];
            model3.addRow(row);
        }
        else {
            for (PEDoc ped : PEDdocList.getPEDocList()) {
                Object[] row = new Object[5];
                row[0] = ped;
                row[1] = ped.getSex();
                row[2] = ped.getUsrname();
                row[3] = ped.getPassword();
                row[4] = ped.getStatu();
                model3.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        updatePED = new JButton();
        updateGO = new JButton();
        refreshJButton = new JButton();
        jScrollPane2 = new JScrollPane();
        GOJTable = new JTable();
        jScrollPane3 = new JScrollPane();
        PEDJTable = new JTable();
        Backbtn = new JButton();
        RemovePED = new JButton();
        addPED = new JButton();
        RemoveGO = new JButton();
        addGO = new JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        updatePED.setText("Update PED Doctor");
        updatePED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePEDActionPerformed(evt);
            }
        });
        add(updatePED, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 340, 160, -1));

        updateGO.setText("Update GO Doctor");
        updateGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateGOActionPerformed(evt);
            }
        });
        add(updateGO, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 170, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, -1, -1));

        GOJTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "GO-Doctor", "Sex", "UserName", "Password", "Statu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(GOJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 670, 110));

        PEDJTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PED-Doctor", "Sex", "UserName", "Password", "Statu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(PEDJTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 670, 110));

        Backbtn.setText("Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });
        add(Backbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        RemovePED.setText("Remove");
        RemovePED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemovePEDActionPerformed(evt);
            }
        });
        add(RemovePED, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, -1, -1));

        addPED.setText("Add PED Doctor");
        addPED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPEDActionPerformed(evt);
            }
        });
        add(addPED, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 340, -1, -1));

        RemoveGO.setText("Remove");
        RemoveGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveGOActionPerformed(evt);
            }
        });
        add(RemoveGO, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, -1, -1));

        addGO.setText("Add GO Doctor");
        addGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGOActionPerformed(evt);
            }
        });
        add(addGO, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void updatePEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePEDActionPerformed

        int selectedRow=PEDJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"please select a row");
            return;
        }
        PEDoc ped=system.getPEdocDirectory().getEmployeeList().get(selectedRow);
        updatePEDJPanel request=new updatePEDJPanel(userProcessContainer,ped,system);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add(request);
        crdLyt.next(userProcessContainer);
        
        
    }//GEN-LAST:event_updatePEDActionPerformed

    private void updateGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateGOActionPerformed
        int selectedRow=GOJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"please select a row");
            return;
        }
        GODoc go=system.getGODocDirectory().getDeliveryManArrayList().get(selectedRow);
        updateGOJPanel request=new updateGOJPanel(userProcessContainer,go,system);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add(request);
        crdLyt.next(userProcessContainer);

    }//GEN-LAST:event_updateGOActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        HospitalContactMain dwjp = (HospitalContactMain) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackbtnActionPerformed

    private void addPEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPEDActionPerformed
        // TODO add your handling code here:
        addPEDJPanel request=new addPEDJPanel(userProcessContainer,system);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add(request);
        crdLyt.next(userProcessContainer);
    }//GEN-LAST:event_addPEDActionPerformed

    private void RemoveGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveGOActionPerformed
        // TODO add your handling code here:
        int selectedRow=GOJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"please select a row");
            return;
        }
        
        system.getGODocDirectory().remove(system.getGODocDirectory().getDeliveryManArrayList().get(selectedRow).getUsrname());
        system.getUserAccountDirectory().remove(system.getUserAccountDirectory().searchUserAccount(system.getGODocDirectory().getDeliveryManArrayList().get(selectedRow).getUsrname()).getUsername());
        JOptionPane.showMessageDialog(this,"Successful");
        populateTable();
    }//GEN-LAST:event_RemoveGOActionPerformed

    private void RemovePEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemovePEDActionPerformed
        // TODO add your handling code here:
        int selectedRow=PEDJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"please select a row");
            return;
        }
        
        system.getPEdocDirectory().remove(system.getPEdocDirectory().getEmployeeList().get(selectedRow).getUsrname());
        system.getUserAccountDirectory().remove(system.getUserAccountDirectory().searchUserAccount(system.getPEdocDirectory().getEmployeeList().get(selectedRow).getUsrname()).getUsername());
        JOptionPane.showMessageDialog(this,"Successful");
        populateTable();
    }//GEN-LAST:event_RemovePEDActionPerformed

    private void addGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGOActionPerformed
        // TODO add your handling code here:
        addGOJPanel request=new addGOJPanel(userProcessContainer,system);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add(request);
        crdLyt.next(userProcessContainer);
    }//GEN-LAST:event_addGOActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton Backbtn;
    private JTable GOJTable;
    private JTable PEDJTable;
    private JButton RemoveGO;
    private JButton RemovePED;
    private JButton addGO;
    private JButton addPED;
    private JScrollPane jScrollPane2;
    private JScrollPane jScrollPane3;
    private JButton refreshJButton;
    private JButton updateGO;
    private JButton updatePED;
    // End of variables declaration//GEN-END:variables
}
