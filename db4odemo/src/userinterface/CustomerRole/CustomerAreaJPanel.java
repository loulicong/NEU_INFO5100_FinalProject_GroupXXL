/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import System.EcoSystem;

import System.Hospital.Hospital;
import System.UserAccount.UserAccount;
import System.InRequest.InRequest;

import java.awt.CardLayout;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class CustomerAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public CustomerAreaJPanel(JPanel userProcessContainer, UserAccount account,EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business= business;
        //valueLabel.setText(enterprise.getName());
        for(InRequest inRequest :business.getWorkQueue().getWorkRequestList()){
            if(inRequest.getSender().getPassword().equals(userAccount.getPassword())&& inRequest.getSender().getUsername().equals(userAccount.getUsername())){
                userAccount.getWorkQueue().getWorkRequestList().add(inRequest);
            }
        }
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
        for(InRequest s:business.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[3];
            row[0]=s.getMessage();
            row[1]=s.getSender();
            row[2]=s.getStatus();
            model.addRow(row);
        }
        DefaultTableModel model_1 = (DefaultTableModel) orderJTable.getModel();
        model_1.setRowCount(0);
        for(Hospital s:business.getHospitalDirectory().getHospitalArrayList()){
            Object[] row = new Object[2];
            row[0]=s.getName();
            model_1.addRow(row);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        requestTestJButton = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        orderJButton = new JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();


        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());


        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }
        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 58, 375, 96));

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null},
                        {null},
                        {null},
                        {null}
                },
                new String [] {
                        "restaurant"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                    false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderJTable);
        if (orderJTable.getColumnModel().getColumnCount() > 0) {
            orderJTable.getColumnModel().getColumn(0).setResizable(false);
        }
        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(508, 58, 375, 96));

        orderJButton.setText("enter");
        orderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderJButtonActionPerformed(evt);
            }
        });
        add(orderJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 215, -1, -1));

        requestTestJButton.setText("Request Test");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton,new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 215, -1, -1));

        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 215, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this,"please select a request");
            return;
        }
        InRequest inRequest =userAccount.getWorkQueue().getWorkRequestList().get(selectedRow);
        RequestLabTestJPanel s= new RequestLabTestJPanel(userProcessContainer,userAccount, inRequest);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add(s);
        crdLyt.next(userProcessContainer);
        
        
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void orderJButtonActionPerformed(java.awt.event.ActionEvent evt) {
        int selectedRow = orderJTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this,"please select a restaurant");
            return;
        }
        Hospital hospital =business.getHospitalDirectory().getHospitalArrayList().get(selectedRow);
        OrderJPanel s= new OrderJPanel(userProcessContainer,userAccount,business, hospital);
        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add(s);
        crdLyt.next(userProcessContainer);
    }


    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();
        
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTable workRequestJTable;
    private javax.swing.JButton orderJButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderJTable;

    // End of variables declaration//GEN-END:variables
}
