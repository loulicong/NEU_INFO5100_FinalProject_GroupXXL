/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Government;

import System.Baby.Baby;
import System.CareCenterSystem;
import System.City.City;
import System.Community.Community;
import System.Government.Faculty;
import System.Government.Government;
import System.UserAccount.UserAccount;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author raunak
 */
public class GovernmentFacultyJPanel extends JPanel {

    private JPanel userProcessContainer;
    private CareCenterSystem business;
    private City city;
    private UserAccount  userAccount;
    private int count;

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public GovernmentFacultyJPanel(JPanel userProcessContainer, UserAccount userAccount, CareCenterSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business= business;
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model_1 = (DefaultTableModel) babyJTable.getModel();
        model_1.setRowCount(0);
        Community community = business.getCommunityList().getCommunityArrayList().get(0);
        for(Faculty z:business.getFacultyDirectory().getFacultyArrayList()){
            if(z.getUsername().equals(userAccount.getUsername())){
                community = z.getCommunity();
            }
        }
        count=0;
        for(Baby s: business.getBabyDirectory().getDeliveryManArrayList()){
            if(s.getMom().getCommunity().getName().equals(community.getName())){
                    Object[] row = new Object[2];
                    row[0]=s.getName();
                    row[1]=s.getBirth();
                    model_1.addRow(row);
                    this.count++;
            }
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new JScrollPane();
        countJLabel = new JLabel();
        countJTextfield = new JTextField();
        babyJTable = new JTable();
        setLayout(new AbsoluteLayout());
        countButton = new JButton();

        babyJTable.setModel(new DefaultTableModel(
                new Object [][] {
                        {null,null},
                        {null,null},
                        {null,null},
                        {null,null}
                },
                new String [] {
                        "name","birthdate"
                }
        ) {
            Class[] types = new Class [] {
                    String.class,String.class
            };
            boolean[] canEdit = new boolean [] {
                    false,false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        countButton.setText("delete");
        countButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                countJButtonActionPerformed(evt);
            }
        });
        add(countButton,new AbsoluteConstraints(400, 50, -1, -1));

        jScrollPane2.setViewportView(babyJTable);
        if (babyJTable.getColumnModel().getColumnCount() > 0) {
            babyJTable.getColumnModel().getColumn(0).setResizable(false);
            babyJTable.getColumnModel().getColumn(1).setResizable(false);
        }
        add(jScrollPane2, new AbsoluteConstraints(40, 158, 375, 96));

        add(countJLabel,new AbsoluteConstraints(50, 55, -1, -1));
        add(countJTextfield,new AbsoluteConstraints(250, 50, 100, 30));
        countJLabel.setText("number of new babys" );

    }// </editor-fold>//GEN-END:initComponents
    private void countJButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String number = Integer.toString(count);
        countJTextfield.setText(number);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField countJTextfield;
    private JLabel countJLabel;
    private JScrollPane jScrollPane2;
    private JTable  babyJTable;
    private JButton countButton;

    // End of variables declaration//GEN-END:variables
}
